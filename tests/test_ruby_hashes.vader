Before (setup relevant ruby conventions):
  set expandtab
  set softtabstop=2


Given (un-indented/inlined ruby symbol-hash):
  foo = {a: 1, b: 2, c: 3}
Execute (ToggleInline):
  :ToggleInline
Expect:
  foo = {
    a: 1,
    b: 2,
    c: 3
  }


Given (un-indented/multiline ruby symbol-hash):
  foo = {
    a: 1,
    b: 2,
    c: 3
  }
Execute (ToggleInline):
  :ToggleInline
Expect:
  foo = {a: 1, b: 2, c: 3}


Given (indented/inlined ruby symbol-hash):
  class Foo
    foo = {a: 1, b: 2, c: 3}
  end
Execute (ToggleInline):
  :ToggleInline
Expect:
  class Foo
    foo = {
      a: 1,
      b: 2,
      c: 3
    }
  end


Given (indented/multiline ruby symbol-hash):
  class Foo
    foo = {
      a: 1,
      b: 2,
      c: 3
    }
  end
Execute (ToggleInline):
  :ToggleInline
Expect:
  class Foo
    foo = {a: 1, b: 2, c: 3}
  end


Given (un-indented/inlined ruby arrow-hash):
  foo = {"a" => 1, "b" => 2, "c" => 3}
Execute (ToggleInline):
  :ToggleInline
Expect:
  foo = {
    "a" => 1,
    "b" => 2,
    "c" => 3
  }


Given (un-indented/multiline ruby arrow-hash):
  foo = {
    "a" => 1,
    "b" => 2,
    "c" => 3
  }
Execute (ToggleInline):
  :ToggleInline
Expect:
  foo = {"a" => 1, "b" => 2, "c" => 3}


Given (indented/inlined ruby arrow-hash):
  class Foo
    foo = {"a" => 1, "b" => 2, "c" => 3}
  end
Execute (ToggleInline):
  :ToggleInline
Expect:
  class Foo
    foo = {
      "a" => 1,
      "b" => 2,
      "c" => 3
    }
  end


Given (indented/multiline ruby arrow-hash):
  class Foo
    foo = {
      "a" => 1,
      "b" => 2,
      "c" => 3
    }
  end
Execute (ToggleInline):
  :ToggleInline
Expect:
  class Foo
    foo = {"a" => 1, "b" => 2, "c" => 3}
  end


Given (nested multiline symbol-hash):
  foo = {
    a: {
      b: 123,
      c: 456,
    }
  }
Execute (ToggleInline):
  :call cursor(3, 0)
  :ToggleInline
Expect:
  foo = {
    a: {b: 123, c: 456}
  }


Given (outer-hash of nested multiline symbol-hash):
  foo = {
    a: {
      b: 123,
      c: 456,
    }
  }
Execute (ToggleInline):
  :call cursor(1, 0)
  :ToggleInline
Expect:
  foo = {a: {b: 123, c: 456, }}


Given (outer-hash of nested inlined symbol-hash):
  foo = {a: {b: 123, c: 456}}
Execute (ToggleInline):
  :ToggleInline
Expect:
  foo = {
    a: {b: 123, c: 456}
  }
